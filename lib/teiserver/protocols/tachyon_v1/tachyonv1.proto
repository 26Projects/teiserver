syntax = "proto3";

option objc_class_prefix = "Tachyon";

package tachyon;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHelloStreamReply (HelloRequest) returns (stream HelloReply) {}
}

service Account {
  rpc GetUsersFromIds (IdList) returns (UserList) {}
  rpc GetUsersFromIdsStreamReply (IdList) returns (stream UserList) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message IdList {
  repeated int32 id_list = 1;
}
message UserList {
  repeated User user_list = 1;
}

message User {
  int32 id = 1;
  string name = 2;
  bool bot = 3;
  int32 clan_id = 4;
  map<string, string> icons = 5;
}

// Same as a user but contains privilaged information
message PrivateUser {
  int32 id = 1;
  string name = 2;
  bool bot = 3;
  int32 clan_id = 4;
  map<string, string> icons = 5;
  
  repeated string permissions = 9;
  repeated int32 friends = 10;
  repeated int32 friend_requests = 11;// Users requesting this user to be their friend
  repeated int32 ignores = 12;
}

// This represents a user who is logged in. A user who is logged out will not have a client object.
message Client {
  int32 id = 1;
  bool in_game = 2;
  bool away = 3;
  
  // Game lobby related attributes
  bool ready = 4;
  int32 player_number = 5;
  string team_colour = 6;
  bool player = 7;
  sint32 bonus = 8;
  map<string, int32> sync = 9;// key represents the item with a value between 0-100 showing the percentage downloaded
  
  string faction = 10;
  int32 lobby_id = 11;
  
  // Other
  int32 party_id = 12;
  string clan_tag = 13;
  bool muted = 14;
}

enum LobbyStatus {
  LOBBY_UNLOCKED = 0;
  LOBBY_FRIENDS = 1;
  LOBBY_WHITELIST = 2;
  LOBBY_LOCKED = 3;
}

message StartArea {
  string type = 1;
  map<string, sint32> values = 2;
}

message Lobby {
  int32 id = 1;
  string name = 2;
  int32 founder_id = 3;
  bool passworded = 4;
  LobbyStatus locked = 5;
  
  string engine_name = 6;
  string engine_version = 7;
  
  repeated int32 players = 8;
  repeated int32 spectators = 9;
  repeated int32 bots = 10;// Ummm, they're not userids, this is wrong
  
  string ip = 11;
  map<string, string> settings = 12;
  map<int32, StartArea> start_areas = 13;
  string map_name = 14;
  string map_hash = 15;
  bool public = 16;
}

message Queue {
  int32 id = 1;
  string name = 2;
  int32 team_size = 3;
  // conditions goes here, not sure of format
  map<string, string> settings = 5;// Not sure we want to have queue settings sent out or not
  repeated string map_list = 6;
}

message Party {
  int32 id = 1;
  int32 leader_id = 2;
  repeated int32 members = 3;
  repeated int32 invites = 4;
}
// protoc --elixir_out=gen_descriptors=true,plugins=grpc:. lib/teiserver/protocols/tachyon_v1/tachyonv1.proto